######################################
## Anotações - Projeto: Be The Hero ##
######################################
Day 01 <-----------------PREPARANDO-O-AMBIENTE---------------------------
1. Instalação
	1.1 Chocolatey (cmd)
	1.2 Node.js (Ferramenta backend)
1.3 VS Code
	1.3.1 Dracula Theme (Ferramenta VSCode)
	1.3.2 Material Icon Theme (Ferramenta VSCode)

2. Usando o Node.js
	2.1 npm init -y (Configuração Node.js)
	2.2 npm install express (Instalando o Express)
	2.3 new index.js (configuração da port:3333)

4. Conhecendo o React
	4.1 npx create-react-app frontend (Criando o projeto front end)
	4.2 npm start (Testando o aplicativo)

5. Conceito sobre React Native
	5.1 JavaScript core (Código único)

6. Explicando o Expo
	6.1 Ações da lib 
	6.2 Usando somente JS

Day 02 <-------------------ELABORANDO-O-BACKEND--------------------------
1. Requisições com GET/POST
	1.1 Métodos de Requisições (GET, POST, PUT, DELETE)
	1.2 Instalando o Insomnia 
	1.3 Testando as rotas com o Insomnia

2. Parâmetros
	2.1 Queries Parms (Usados para paginação e filtros)
	2.2 Route Parms (Identificar recursos)
	2.3 Request Body (Pegando informações com JSON)

3. Nodemon
	3.1 npm install nodemon -D (Instalação)
	3.2 Reset automático (npm start - index.js)

4. Banco de dados
	4.1 Instalando o SQLite
	4.2 npm install knex / npm install sqlite3 (comandos)
	4.3 knexfile (setando o endereço de dev)

5. Análise de recursos 
	5.1 Entidades 
	5.2 Funcionalidades

6. Criando as tabelas
	6.1 npx knex migrate:make create_ongs (comando)
	6.2 npx migrate:latest (comando)

7.Controladores (MVC)
	7.1 OngController
	7.2 IncidentController
	7.3 ProfileController
	7.4 SessionController
Day 03 <--------------------ELABORANDO-O-FRONTEND-----------------------
1. Limpando o projeto
	1.1 Apagando arquivos não utilizados
	1.2 Estrutura de funcionamento do React (npm start)
	1.2.1 (index.js --> App.js --> Header.js)

2. Conceitos do React
	2.1 Componente = função que retorna um html (JSX) 
	2.2 Propriedades = modificação de conteúdo atravès de injeção(js)
	2.2.1 Desestruturação de propriedade (Código mais claro)
	2.4 Estado modificado = componente precisa rendenizar novamente {useState}

3. Configurações de CSS e Emmet
	3.1 style.css (por página)
	3.2 global.css (imports e resets)
	3.3 Habilitando atalhos com emmet (settings.json)

4. Criando Página de Login
	4.1 Importando imagens
	4.2 Elaboração de formulário
	4.3 Importando Icones (Feather Icons)
	4.4 Estilizando a página (Estruturas form/section/h1/a/svg)

5. Configurações de rotas
	5.1 npm react-router-dom (instalação)
	5.2 Importação (BrowserRouter, Router, Switch)
	5.3 Setando a rota para página inicial (Imports)
	5.4 Propriedade 'exact' para página inicial
	5.5 usando 'Link' do react para melhorar mudança de página

6. Criando Página de Cadastro de ONGs
	6.1 aproveitamento de CSS
	6.2 Criando HTML
	6.3 Estilizando a página
	6.4 Aprendendo sobre style e (input + input)

7. Criando Página de Perfil
	7.1 Criando HTML
	7.2 Estilizando a página (posicionamento de elementos)
	7.3 utilizando :not(:first-child)

8. Criando Página de Cadastro de Casos
	8.1 Copiando HTML e CSS da pagina de Cadastro de ONGs
	8.2 Consertando reajustando CSS
	8.3 Verificando LINKs

9. Conectando o Front-end e o Back-end
	9.1 npm install axios (npm start)
	9.2 configurando páginas (recepção de valores de cadastro)
	9.3 testando (utlização de async-await)
	9.4 Usando useState e useHistory
	9.5 Preenchendo formulário dinamicamente (.map)
	9.6 Formatando com INTL
	9.7 Criando a função HandleDelete
	9.8 Criando a função Logout



































